name: "Terraform infrastructure deployment"
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

on:
  push:
    branches:
      - dev
      - staging
      - production
  
  workflow_dispatch:
  pull_request:
    
env:
  AWS_REGION: "us-east-1"

jobs:
  lint:
    name: "Lint terraform code"
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Cache plugin dir
        uses: actions/cache@v2
        with:
          path: ~/.tflint.d/plugins
          key: tflint-${{ hashFiles('.tflint.hcl') }}

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v2
        with:
          tflint_version: v0.38.1

      - name: Init TFLint
        run: tflint --init

      - name: Run TFLint
        run: tflint -f compact

  tfsec:
    name: "Tfsec terraform code"
    runs-on: ubuntu-22.04
    needs: lint
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Run Tfsec
        uses: aquasecurity/tfsec-pr-commenter-action@v1.2.0
        with:
          tfsec_args: --soft-fail
          github_token: ${{ github.token }}

  terraform:
   name: "Terraform"
   runs-on: ubuntu-22.04
   needs: lint
   defaults:
     run:
       working-directory: ${{ github.ref_name }}
   steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
          persist-credentials: false

    - name: Set terraform version env
      run: echo "TF_VERSION=$(cat .terraform-version)" >> $GITHUB_ENV

    - name: Setup terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TF_VERSION }}